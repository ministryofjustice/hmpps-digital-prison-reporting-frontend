{#
  filters: [{
    text,           // The text to show next to the filter
    id,             // The unique ID of the filter
    type,           // The type of the filter (e.g. select)
    options,        // The options to display if this filter is a select or a radio
    value,          // The selected value of the filter.
  }],
  urlWithNoFilters, // The page URL without any filters applied.
  parameterPrefix   // The prefix to apply to the filter parameters in the page URL.
#}

{% from "govuk/components/select/macro.njk"               import govukSelect %}
{% from "govuk/components/radios/macro.njk"               import govukRadios %}
{% from "govuk/components/input/macro.njk"                import govukInput %}
{% from "moj/components/filter/macro.njk"                 import mojFilter -%}
{% from "dpr/components/autocomplete-text-input/view.njk" import dprAutocompleteTextInput -%}

{% macro dprFilters(filters, urlWithNoFilters, parameterPrefix = "filters.") %}
  {% set today = getTodayIsoDate() %}

  {%- set filterOptionsHtml %}
    {%- for filter in filters %}
      {%- if filter.type | lower === 'select' %}
        {{ govukSelect({
          id: parameterPrefix + filter.name,
          name: parameterPrefix + filter.name,
          value: filter.value,
          items: filter.options,
          label: {
            text: filter.text
          }
        }) }}
      {% elif filter.type | lower === 'radio' %}
        {{ govukRadios({
          id: parameterPrefix + filter.name,
          name: parameterPrefix + filter.name,
          fieldset: {
            legend: {
              text: filter.text,
              classes: "govuk-label govuk-!-font-weight-bold"
            }
          },
          items: filter.options,
          value: filter.value
        }) }}
      {% elif filter.type | lower === 'daterange' %}
        <div class="govuk-form-group">
          <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-label govuk-!-font-weight-bold">
              {{ filter.text }}
            </legend>
            {{ govukInput({
              id: parameterPrefix + filter.name + '.start',
              label: {
                text: 'Start'
              },
              name: parameterPrefix + filter.name + '.start',
              value: filter.value.start,
              type: 'date',
              attributes: {
                max: today
              }
            }) }}
            {{ govukInput({
              id: parameterPrefix + filter.name + '.end',
              label: {
                text: 'End'
              },
              name: parameterPrefix + filter.name + '.end',
              value: filter.value.end,
              type: 'date',
              attributes: {
                max: today
              }
            }) }}
          </fieldset>
        </div>
      {% elif filter.type | lower === 'autocomplete' %}
        {{ dprAutocompleteTextInput({
          id: parameterPrefix + filter.name,
          name: parameterPrefix + filter.name,
          items: filter.options,
          value: filter.value,
          labelText: filter.text,
          minimumLength: filter.minimumLength,
          dynamicResourceEndpoint: filter.dynamicResourceEndpoint
        }) }}
      {% endif %}
    {%- endfor %}
  {%- endset %}

  {{ mojFilter({
    heading: {
      text: 'Filter'
    },

    submit: {
      attributes: {
        'data-apply-form-to-querystring': 'true',
        'data-apply-form-selector': '.moj-filter-layout__filter input',
        'data-apply-base-url': urlWithNoFilters
      }
    },

    optionsHtml: filterOptionsHtml
  }) }}
{% endmacro %}
