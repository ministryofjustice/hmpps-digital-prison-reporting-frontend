{
  "version": 3,
  "sources": ["../../src/dpr/DprLoadingHelper.mjs", "../../src/dpr/DprClientClass.mjs", "../../src/dpr/components/card-group/clientClass.mjs", "../../src/dpr/components/_catalogue/catalogue-search/clientClass.mjs", "../../src/dpr/components/bookmark-toggle/clientClass.mjs", "../../src/dpr/components/show-more/clientClass.mjs", "../../src/dpr/DprQueryParamClass.mjs", "../../src/dpr/DprFormValidationClass.mjs", "../../src/dpr/components/download-feeback-form/cientClass.mjs", "../../src/dpr/components/_reports/report-pagination/clientClass.mjs", "../../src/dpr/components/_reports/report-actions/clientClass.mjs", "../../src/dpr/components/_reports/report-data-table/clientClass.mjs", "../../src/dpr/components/_reports/report-columns-form/clientClass.mjs", "../../src/dpr/components/_reports/report-download-message/clientClass.mjs", "../../src/dpr/components/_filters/filters-form/clientClass.mjs", "../../src/dpr/components/_filters/filters-interactive/clientClass.mjs", "../../src/dpr/DprPollingStatusClass.mjs", "../../src/dpr/components/_async/async-polling/clientClass.mjs", "../../src/dpr/components/_async/async-filters-form/clientClass.mjs", "../../src/dpr/DprSyncLoading.mjs", "../../src/dpr/components/_inputs/date-input/clientClass.mjs", "../../src/dpr/components/_inputs/date-range/clientClass.mjs", "../../src/dpr/components/_inputs/autocomplete-text-input/clientClass.mjs", "../../src/dpr/components/_inputs/granular-date-range/clientClass.mjs", "../../src/dpr/components/user-reports/requested/clientClass.mjs", "../../src/dpr/components/user-reports/viewed/clientClass.mjs", "../../src/dpr/components/_charts/chart/clientClass.mjs", "../../src/dpr/components/_charts/chart/bar/clientClass.mjs", "../../src/dpr/components/_charts/chart/doughnut/clientClass.mjs", "../../src/dpr/components/_charts/chart/line/clientClass.mjs", "../../src/dpr/components/_dashboards/scorecard/clientClass.mjs", "../../src/dpr/all.mjs"],
  "sourcesContent": ["export default class DprLoadingHelper {\n  showLoadingAnimation(wrapperClass) {\n    const loadingPanelClass = '.dpr-loading-panel'\n    document.querySelectorAll(loadingPanelClass).forEach((l) => {\n      l.classList.add('show')\n    })\n\n    let loadingAnimClass = '.dpr-loading-anim'\n    if (wrapperClass) loadingAnimClass = `.${wrapperClass} ${loadingAnimClass}`\n    document.querySelectorAll(loadingAnimClass).forEach((l) => {\n      l.classList.add('show')\n    })\n  }\n\n  hideLoadingAnimation() {\n    document.querySelectorAll('.dpr-loading-panel').forEach((l) => {\n      l.classList.remove('show')\n    })\n    document.querySelectorAll('.dpr-loading-anim').forEach((l) => {\n      l.classList.remove('show')\n    })\n  }\n}\n", "export class DprClientClass {\n\n  constructor(element, loadingHelper) {\n    this.element = element\n    this.loadingHelper = loadingHelper\n  }\n\n  static getModuleName() {\n    throw new Error(\"Module name not set\")\n  }\n\n  getElement() {\n    return this.element\n  }\n\n  initialise() {\n    throw new Error(\"Initialisation not configured\")\n  }\n}", "import { DprClientClass } from '../../DprClientClass.mjs'\n\nexport default class CardGroup extends DprClientClass {\n  static getModuleName() {\n    return 'card-group'\n  }\n\n\n  initialise() {\n    const cards = this.getElement().querySelectorAll('[data-click-navigate-to]')\n    const wrapperClass = 'card-loading'\n\n    cards.forEach((card) => {\n      card.addEventListener('click', () => {\n        card.classList.add(wrapperClass)\n        this.loadingHelper.showLoadingAnimation(wrapperClass)\n\n        cards.forEach((c) => {\n          if (!c.classList.contains('card-loading')) {\n            const disabledClass = 'card-disabled'\n            c.classList.add(disabledClass)\n          }\n        })\n        window.location.href = card.dataset.clickNavigateTo\n      })\n    })\n  }\n}\n", "/* eslint-disable class-methods-use-this */\n/* eslint-disable no-param-reassign */\nimport { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class DprCatalogueSearch extends DprClientClass {\n  static getModuleName() {\n    return 'dpr-catalogue-search'\n  }\n\n  initialise() {\n    this.searchBox = this.getElement().querySelector('.dpr-search-box')\n    this.shwoUnauthorisedCheckbox = this.getElement().querySelector('#show-unauthorised')\n\n    if (this.searchBox) {\n      this.initSeachBoxEvents()\n    }\n\n    if (this.shwoUnauthorisedCheckbox) {\n      this.initShowUnauthorisedEvents()\n    }\n\n    this.initInputFromQueryParams()\n  }\n\n  initSeachBoxEvents() {\n    this.searchBox.addEventListener('keyup', (e) => {\n      this.updateTableRows(e.target.value)\n\n      // Update Query Params\n      const queryParams = new URLSearchParams(window.location.search)\n      queryParams.set(this.searchBox.id, e.target.value)\n      window.history.replaceState(null, null, `?${queryParams.toString()}`)\n    })\n  }\n\n  initShowUnauthorisedEvents() {\n    this.shwoUnauthorisedCheckbox.addEventListener('change', (e) => {\n      const queryParams = new URLSearchParams(window.location.search)\n      if (e.target.checked) {\n        queryParams.set(e.target.id, e.target.value)\n      } else {\n        queryParams.delete(e.target.id, e.target.value)\n      }\n      window.history.replaceState(null, null, `?${queryParams.toString()}`)\n\n      this.updateTableRows(this.searchBox.value)\n    })\n\n    this.updateTableRows(this.searchBox.value)\n  }\n\n  updateTableRows(searchValue) {\n    const table = this.getElement().querySelector('table').querySelector('tbody')\n\n    const rows = Array.from(table.rows)\n    rows.forEach((row) => row.classList.add('search-option-hide'))\n\n    this.updateSearchListing(rows, searchValue)\n    this.toggleUnauthorisedRows(rows)\n  }\n\n  toggleUnauthorisedRows(rows) {\n    const queryParams = new URLSearchParams(window.location.search)\n    const value = queryParams.get('show-unauthorised')\n\n    rows\n      .filter((row) => {\n        return Array.from(row.cells).find((cell) => {\n          return cell.innerHTML.includes('dpr-unauthorised-report')\n        })\n      })\n      .forEach((row) => {\n        if (value) {\n          row.classList.remove('search-option-hide')\n        } else if (!row.classList.contains('search-option-hide')) row.classList.add('search-option-hide')\n      })\n  }\n\n  updateSearchListing(rows, value) {\n    rows\n      .filter((row) => {\n        return (\n          !value ||\n          value.length === 0 ||\n          Array.from(row.cells).find((cell) => {\n            const searchValue = value.toLowerCase()\n            return cell.innerText.toLowerCase().includes(searchValue.toLowerCase())\n          })\n        )\n      })\n      .forEach((row) => {\n        row.classList.remove('search-option-hide')\n      })\n  }\n\n  // eslint-disable-next-line\n  initInputFromQueryParams () {\n    const urlParams = new URLSearchParams(window.location.search)\n\n    urlParams.forEach((value, key) => {\n      const element = document.getElementById(key)\n\n      if (element && element.classList.contains('dpr-search-box')) {\n        element.value = value\n        this.updateTableRows(element.value)\n      }\n\n      if (element && element.id === 'show-unauthorised') {\n        element.setAttribute('checked', '')\n      }\n    })\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport { DprClientClass } from '../../DprClientClass.mjs'\n\nexport default class BookmarkToggle extends DprClientClass {\n  static getModuleName() {\n    return 'bookmark-toggle'\n  }\n\n  initialise() {\n    this.initToggles()\n  }\n\n  initToggles() {\n    const element = this.getElement()\n    element.querySelectorAll('.bookmark-input[type=checkbox]').forEach((bookmarkToggle) => {\n      const csrfToken = bookmarkToggle.getAttribute('data-csrf-token')\n      const reportId = bookmarkToggle.getAttribute('data-report-id')\n      const id = bookmarkToggle.getAttribute('data-id')\n      const reportType = bookmarkToggle.getAttribute('data-report-type')\n\n      this.bookmarkWrapper = bookmarkToggle.parentNode\n      this.bookmarkColumn = this.bookmarkWrapper.parentNode\n      this.bookmarkLabel = this.bookmarkWrapper.querySelector('.dpr-bookmark-label--component')\n\n      bookmarkToggle.addEventListener('change', async () => {\n        if (bookmarkToggle.checked) {\n          await this.addBookmark(bookmarkToggle, id, reportId, reportType, csrfToken)\n        } else {\n          await this.removeBookmark(bookmarkToggle, id, reportId, reportType, csrfToken)\n        }\n      })\n\n      this.bookmarkColumn.addEventListener('keyup', async (e) => {\n        if (e.key === 'Enter') {\n          await this.handleBookmarkChange(bookmarkToggle, id, reportId, reportType, csrfToken)\n        }\n      })\n    })\n  }\n\n  async addBookmark(bookmarkToggle, id, reportId, reportType, csrfToken) {\n    bookmarkToggle.setAttribute('checked', '')\n    this.bookmarkWrapper.setAttribute('tooltip', 'Remove bookmark')\n    if (this.bookmarkLabel) this.bookmarkLabel.innerText = 'Bookmarked'\n    await this.toggleBookmark('add', id, reportId, reportType, csrfToken)\n  }\n\n  async removeBookmark(bookmarkToggle, id, reportId, reportType, csrfToken) {\n    bookmarkToggle.removeAttribute('checked')\n    this.bookmarkWrapper.setAttribute('tooltip', 'Add bookmark')\n    if (this.bookmarkLabel) this.bookmarkLabel.innerText = 'Bookmark removed'\n    await this.toggleBookmark('remove', id, reportId, reportType, csrfToken)\n  }\n\n  async handleBookmarkChange(bookmarkToggle, id, reportId, reportType, csrfToken) {\n    if (bookmarkToggle.checked) {\n      bookmarkToggle.removeAttribute('checked')\n      this.bookmarkWrapper.setAttribute('tooltip', 'Add bookmark')\n      if (this.bookmarkLabel) this.bookmarkLabel.innerText = 'Bookmark removed'\n      await this.toggleBookmark('remove', id, reportId, reportType, csrfToken)\n    } else {\n      bookmarkToggle.setAttribute('checked', '')\n      this.bookmarkWrapper.setAttribute('tooltip', 'Bookmarked')\n      if (this.bookmarkLabel) this.bookmarkLabel.innerText = 'Bookmarked'\n      await this.toggleBookmark('add', id, reportId, reportType, csrfToken)\n    }\n  }\n\n  async toggleBookmark(type, id, reportId, reportType, csrfToken) {\n    const endpoint = type === 'add' ? '/dpr/addBookmark/' : '/dpr/removeBookmark/'\n    await fetch(endpoint, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'CSRF-Token': csrfToken,\n      },\n      body: JSON.stringify({\n        id,\n        reportId,\n        reportType,\n      }),\n    })\n      .then(() => {\n        if (!window.location.href.includes('/report')) {\n          window.location.reload()\n        }\n      })\n      .catch((error) => console.error('Error:', error))\n  }\n}\n", "import { DprClientClass } from '../../DprClientClass.mjs'\n\nexport default class ShowMore extends DprClientClass {\n  static getModuleName() {\n    return 'show-more'\n  }\n\n  initialise() {\n    this.initShowMore()\n  }\n\n  initShowMore() {\n    const element = this.getElement()\n    const textContainer = element.querySelector('.dpr-show-more-content')\n    const button = element.querySelector('.dpr-show-hide-button')\n    const textContent = element.getAttribute('data-content')\n    const length = +element.getAttribute('data-length') || 200\n    const shortString = textContent.replaceAll(/<[^>]+>/g, '').substring(0, length)\n\n    if (textContent.length > length) {\n      textContainer.innerHTML = `${shortString}... `\n    } else {\n      textContainer.innerHTML = `${textContent}`\n      button.style.display = 'none'\n    }\n\n    button.addEventListener('click', (event) => {\n      event.preventDefault()\n      if (button.innerHTML === 'show more') {\n        textContainer.innerHTML = `${textContent}  `\n        button.innerHTML = 'show less'\n      } else if (button.innerHTML === 'show less') {\n        textContainer.innerHTML = `${shortString}... `\n        button.innerHTML = 'show more'\n      }\n    })\n  }\n}\n", "/* global dayjs */\n\n/* eslint-disable class-methods-use-this */\nimport { DprClientClass } from './DprClientClass.mjs'\n\nexport default class DprQueryParamClass extends DprClientClass {\n  /**\n   * initialises the selected values from the query params\n   *\n   * @memberof AsyncFilters\n   */\n  initInputsFromQueryParams() {\n    this.queryParams = new URLSearchParams(window.location.search)\n    this.queryParams.forEach((value, key) => {\n      const inputs = document.getElementsByName(key)\n      if (inputs.length) {\n        const input = inputs[0]\n        const { type } = input\n        if (type === 'radio' || type === 'checkbox') {\n          this.setMultiSelectValue(inputs, value)\n        } else if (input.classList.contains('moj-js-datepicker-input')) {\n          const formatted = dayjs(value, 'YYYY-MM-DD').format('DD/MM/YYYY')\n          input.value = formatted !== 'Invalid Date' ? formatted : ''\n        } else {\n          input.value = value\n        }\n      }\n    })\n  }\n\n  /**\n   * Initialises the input event listeners\n   *\n   * @memberof AsyncFilters\n   */\n  initInputEvents(elements) {\n    Array.from(elements).forEach((input) => {\n      input.addEventListener('change', () => {\n        this.setQueryParamFromInput(input, true, false)\n      })\n    })\n  }\n\n  /**\n   * Initialises the query params from default inputs\n   *\n   * @param {*} elements\n   * @memberof DprQueryParamClass\n   */\n  initQueryParamsFromInputs(elements) {\n    Array.from(elements).forEach((input) => {\n      if (input.type !== 'hidden') this.setQueryParamFromInput(input, false, true)\n    })\n  }\n\n  /**\n   * Sets a single query param from an single input\n   *\n   * @param {*} input\n   * @param {*} toggleCheckbox\n   * @memberof DprQueryParamClass\n   */\n  setQueryParamFromInput(input, toggleCheckbox = false, init = false) {\n    const { type } = input\n    if (type === 'checkbox' || type === 'radio') {\n      this.setMultiSelectQueryParam(input, toggleCheckbox, init)\n    } else {\n      const { name } = input\n      let { value } = input\n      const { staticOptionNameValue } = input\n      const isDateInput = input.classList.contains('moj-js-datepicker-input')\n      if (isDateInput) {\n        const formatted = dayjs(value, 'D/M/YYYY').format('YYYY-MM-DD')\n        value = formatted !== 'Invalid Date' ? formatted : ''\n      }\n      const valueToUpdate = !isDateInput && staticOptionNameValue ? staticOptionNameValue : value\n      if (name) this.updateQueryParam(name, valueToUpdate)\n    }\n  }\n\n  /**\n   * Sets the query params for checkboxes\n   *\n   * @param {*} input\n   * @param {*} toggle - adds the delete step on toggle\n   * @memberof DprQueryParamClass\n   */\n  setMultiSelectQueryParam(input, toggle, init) {\n    this.queryParams = new URLSearchParams(window.location.search)\n    const { name, value, checked, type } = input\n    if (checked && !this.queryParams.has(name, value)) {\n      let updateType\n      if (type === 'checkbox') {\n        updateType = 'append'\n        if (!init && name !== 'columns') this.updateQueryParam('preventDefault', true)\n      }\n      this.updateQueryParam(name, value, updateType)\n    } else if (!checked && this.queryParams.has(name, value) && toggle) {\n      if (type === 'checkbox') {\n        if (!init && name !== 'columns') this.updateQueryParam('preventDefault', true)\n      }\n      this.updateQueryParam(name, value, 'delete')\n    }\n  }\n\n  /**\n   * Updates the query string and updates the URL\n   *\n   * @param {*} queryParams\n   * @param {*} name\n   * @param {*} value\n   * @memberof DprQueryParamClass\n   */\n  updateQueryParam(name, value, type) {\n    this.queryParams = new URLSearchParams(window.location.search)\n    if (!value && name.length) {\n      this.queryParams.delete(name)\n    } else {\n      switch (type) {\n        case 'append':\n          this.queryParams.append(name, value)\n          break\n        case 'delete':\n          this.queryParams.delete(name, value)\n          break\n        default:\n          this.queryParams.set(name, value)\n          break\n      }\n    }\n\n    window.history.replaceState(null, null, `?${this.queryParams.toString()}`)\n  }\n\n  /**\n   * Clears the query params\n   *\n   * @memberof DprQueryParamClass\n   */\n  clearQueryParams(type) {\n    this.queryParams = new URLSearchParams(window.location.search)\n    const params = Array.from(this.queryParams)\n\n    params.forEach((p) => {\n      if (type && p[0].includes(type)) {\n        this.queryParams.delete(p[0], p[1])\n      }\n      if (type === 'filters') {\n        this.queryParams.delete('preventDefault')\n      }\n    })\n    window.history.replaceState(null, null, `?${this.queryParams.toString()}`)\n  }\n\n  /**\n   * Given a form element, will extract the formdata\n   * as an array of objects and filter out empty values.\n   *\n   * @param {*} form\n   * @return {*}\n   * @memberof AsyncFilters\n   */\n  getFormDataAsObject(form, prefix) {\n    const formData = new FormData(form)\n    const array = Array.from(formData.entries())\n      .filter((entry) => {\n        return entry[1] !== ''\n      })\n      .map((entry) => {\n        return { [`${prefix}${entry[0]}`]: entry[1] }\n      })\n\n    return Object.assign({}, ...[...array])\n  }\n\n  /**\n   * Sets the value of a radio button\n   *\n   * @param {*} inputs\n   * @param {*} value\n   * @memberof AsyncFilters\n   */\n  setMultiSelectValue(inputs, value) {\n    const input = Array.from(inputs).find((i) => i.getAttribute('value') === value)\n    if (input) input.checked = true\n  }\n\n  /**\n   * Sets the value of the checkboxes\n   *\n   * @param {*} inputs\n   * @param {*} value\n   * @memberof DprQueryParamClass\n   */\n  setCheckBoxValues(inputs, value) {\n    const input = Array.from(inputs).find((i) => i.getAttribute('value') === value)\n    if (input) input.checked = true\n  }\n\n  removeNoFilterValues() {\n    this.queryParams = new URLSearchParams(window.location.search)\n    const params = Array.from(this.queryParams)\n    params.forEach((p) => {\n      if (p[1].includes('no-filter')) this.queryParams.delete(p[0], p[1])\n    })\n    window.history.replaceState(null, null, `?${this.queryParams.toString()}`)\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport DprQueryParamClass from './DprQueryParamClass.mjs'\n\nexport default class DprFormValidationClass extends DprQueryParamClass {\n  initFormValidation(formFields) {\n    formFields.forEach((field) => {\n      const formGroup = field.closest('div.govuk-form-group')\n      if (formGroup) {\n        const errorMessageEl = formGroup.querySelector('p.govuk-error-message')\n        if (errorMessageEl) {\n          formGroup.classList.remove('govuk-form-group--error')\n          errorMessageEl.classList.add('govuk-error-message--hidden')\n          field.classList.remove('govuk-input--error')\n          field.classList.remove('govuk-textarea--error')\n          field.classList.remove('govuk-select--error')\n        }\n      }\n    })\n  }\n\n  validateForm() {\n    this.errorMessages = []\n    let prevfieldName = ''\n    this.formFields.forEach((field) => {\n      const currentFieldName = field.getAttribute('name')\n      if (currentFieldName !== prevfieldName && field.tagName !== 'BUTTON') {\n        const formGroupEl = field.closest('div.govuk-form-group')\n\n        if (formGroupEl) {\n          const errorMessageEl = formGroupEl.querySelector('p.govuk-error-message')\n          if (!this.fieldIsValid(field)) {\n            this.showFieldError(field, formGroupEl, errorMessageEl)\n          } else if (errorMessageEl && formGroupEl) {\n            this.hideFieldError(field, formGroupEl, errorMessageEl)\n          }\n        }\n      }\n      prevfieldName = field.getAttribute('name')\n    })\n\n    if (this.errorMessages.length) {\n      this.buildErrorSummary()\n      this.errorSummary.classList.remove('query-error-summary--hidden')\n    } else {\n      this.errorSummary.classList.add('query-error-summary--hidden')\n    }\n  }\n\n  fieldIsValid(field) {\n    const { type } = field\n    switch (type) {\n      case 'checkbox':\n        return this.validateCheckbox(field)\n      default:\n        return field.checkValidity()\n    }\n  }\n\n  validateCheckbox(field) {\n    const checkboxWrapper = field.closest('div.govuk-checkboxes')\n    if (checkboxWrapper.hasAttribute('required')) {\n      const checkboxes = checkboxWrapper.querySelectorAll('input[type=\"checkbox\"]')\n      return Array.from(checkboxes).some((x) => x.checked)\n    }\n    return true\n  }\n\n  showFieldError(field, formGroupEl, errorMessageEl) {\n    formGroupEl.classList.add('govuk-form-group--error')\n    const message = this.setValidationMessage(field.validity, field, errorMessageEl)\n\n    // eslint-disable-next-line no-param-reassign\n    errorMessageEl.innerHTML = `<span class=\"govuk-visually-hidden\">Error:</span>${message}`\n    errorMessageEl.classList.remove('govuk-error-message--hidden')\n    field.classList.add('govuk-input--error')\n  }\n\n  hideFieldError(field, formGroupEl, errorMessageEl) {\n    formGroupEl.classList.remove('govuk-form-group--error')\n    errorMessageEl.classList.add('govuk-error-message--hidden')\n    field.classList.remove('govuk-input--error')\n  }\n\n  buildErrorSummary() {\n    const errorSummaryBody = this.errorSummary.querySelector('div.govuk-error-summary__body')\n    let messages = ''\n    this.errorMessages.forEach((m) => {\n      messages += `<li><a href=\"${m.href}\">${m.text}</a></li>`\n    })\n    const errorMessages = `<ul class=\"govuk-list govuk-error-summary__list\">${messages}</ul>`\n    errorSummaryBody.innerHTML = errorMessages\n  }\n\n  getDisplayName(field) {\n    const type = field.getAttribute('type')\n    switch (type) {\n      case 'text':\n        return field.getAttribute('display-name')\n      case 'radio':\n        return field.closest('div.govuk-radios').getAttribute('display-name')\n      case 'checkbox':\n        return field.closest('div.govuk-checkboxes').getAttribute('display-name')\n      default:\n        return field.getAttribute('display-name')\n    }\n  }\n\n  setValidationMessage(validityState, field, errorMessageEl) {\n    const existingErrorMessage = errorMessageEl.lastChild.nodeValue.replace(/(\\r\\n|\\n|\\r)/gm, '').trim()\n    const inputId = field.getAttribute('id')\n    const displayName = this.getDisplayName(field)\n    let message\n\n    if (validityState.valueMissing || field.type === 'checkbox') {\n      message = existingErrorMessage.length ? existingErrorMessage : `${displayName} is required`\n      this.errorMessages.push({\n        text: message,\n        href: `#${inputId}`,\n      })\n    }\n\n    if (validityState.patternMismatch) {\n      const pattern = field.getAttribute('pattern-hint') || field.getAttribute('pattern')\n      message = existingErrorMessage.length\n        ? existingErrorMessage\n        : `The value for ${displayName} must be in the correct pattern: ${pattern}`\n      this.errorMessages.push({\n        text: message,\n        href: `#${inputId}`,\n      })\n    }\n\n    return message\n  }\n}\n", "import DprFormValidationClass from '../../DprFormValidationClass.mjs'\n\nexport default class AsyncFilters extends DprFormValidationClass {\n  static getModuleName() {\n    return 'download-feedback-form'\n  }\n\n  initialise() {\n    this.errorMessages = []\n    this.mainForm = document.getElementById('download-feedback-form')\n    this.mainForm.noValidate = true\n    this.formFields = Array.from(this.mainForm.elements)\n\n    this.errorSummary = document.getElementById('download-feedback-form-summary')\n    this.submitButton = document.getElementById('download-feedback-form-submit')\n    this.success = document.getElementById('download-feedback-form-success')\n\n    this.initSubmitButton()\n    this.initFormValidation(this.formFields)\n    this.mainForm.classList.remove('download-feedback-form--hidden')\n  }\n\n  initSubmitButton() {\n    this.submitButton.addEventListener('click', (e) => {\n      e.preventDefault()\n      this.validateForm()\n\n      if (this.mainForm.checkValidity()) {\n        this.mainForm.requestSubmit()\n      }\n    })\n  }\n}\n", "import DprQueryParamClass from '../../../DprQueryParamClass.mjs'\n\nexport default class Pagination extends DprQueryParamClass {\n  static getModuleName() {\n    return 'pagination'\n  }\n\n  initialise() {\n    this.pageSizeSelect = document.getElementById('page-size-select')\n\n    this.initInputsFromQueryParams()\n    this.initSelectEvent()\n  }\n\n  initSelectEvent() {\n    this.pageSizeSelect.addEventListener('change', () => {\n      this.queryParams = new URLSearchParams(window.location.search)\n      const { name, value } = this.pageSizeSelect\n      this.queryParams.set(name, value)\n      this.queryParams.set('selectedPage', '1')\n      window.history.replaceState(null, null, `?${this.queryParams.toString()}`)\n      window.location.reload()\n    })\n  }\n}\n", "import { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class IconButtonList extends DprClientClass {\n  static getModuleName() {\n    return 'report-actions'\n  }\n\n  initialise() {\n    this.refreshButton = document.getElementById('dpr-button-refresh')\n    this.printButton = document.getElementById('dpr-button-printable')\n    this.shareButton = document.getElementById('dpr-button-sharable')\n    this.downloadButton = document.getElementById('dpr-button-downloadable')\n    this.copyButton = document.getElementById('dpr-button-copy')\n\n    this.initRefreshEvent()\n    this.initPrintButtonEvent()\n    this.initShareButtonEvent()\n    this.initCopyButtonEvent()\n  }\n\n  initPrintButtonEvent() {\n    if (this.printButton) {\n      const disabled = this.printButton.getAttribute('data-disabled')\n      this.printButton.addEventListener('click', () => {\n        if (disabled !== 'true') {\n          window.print()\n        }\n      })\n\n      this.printButton.addEventListener('keyup', (e) => {\n        if (e.key === 'Enter') {\n          if (disabled !== 'true') {\n            window.print()\n          }\n        }\n      })\n    }\n  }\n\n  initShareButtonEvent() {\n    if (this.shareButton) {\n      const href = this.shareButton.getAttribute('data-href')\n      this.shareButton.addEventListener('click', () => {\n        window.location = href\n      })\n\n      this.shareButton.addEventListener('keyup', (e) => {\n        if (e.key === 'Enter') {\n          window.location = href\n        }\n      })\n    }\n  }\n\n  initCopyButtonEvent() {\n    if (this.copyButton) {\n      const href = this.copyButton.getAttribute('data-href')\n      this.copyButton.addEventListener('click', () => {\n        navigator.clipboard.writeText(href)\n      })\n\n      this.copyButton.addEventListener('keyup', (e) => {\n        if (e.key === 'Enter') {\n          navigator.clipboard.writeText(href)\n        }\n      })\n    }\n  }\n\n  initRefreshEvent() {\n    if (this.refreshButton) {\n      const href = this.refreshButton.getAttribute('data-href')\n      this.refreshButton.addEventListener('click', () => {\n        window.location = href\n      })\n\n      this.refreshButton.addEventListener('keyup', (e) => {\n        if (e.key === 'Enter') {\n          window.location = href\n        }\n      })\n    }\n  }\n}\n", "import { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class DataTable extends DprClientClass {\n  static getModuleName() {\n    return 'data-table'\n  }\n\n  initialise() {\n    this.tableContainer = document.getElementById('dpr-table-wrapper')\n    this.table = document.getElementById('dpr-data-table')\n    this.overflowGradient = document.getElementById('dpr-overflow-gradient')\n    this.createTableHeaderAndFooter()\n    this.initTableScrollListener()\n  }\n\n  initTableScrollListener() {\n    this.checkOffsetWidths()\n\n    window.addEventListener('resize', () => {\n      this.checkOffsetWidths()\n    })\n\n    this.tableContainer.addEventListener('scroll', (event) => {\n      const endOfScroll = this.table.offsetWidth\n      const currentScroll = event.target.offsetWidth + event.target.scrollLeft\n      if (endOfScroll === currentScroll) {\n        this.overflowGradient.style.display = 'none'\n      } else {\n        this.overflowGradient.style.display = 'block'\n      }\n    })\n  }\n\n  checkOffsetWidths() {\n    if (this.tableContainer.offsetWidth >= this.table.offsetWidth) {\n      this.overflowGradient.style.display = 'none'\n    } else {\n      this.overflowGradient.style.display = 'block'\n    }\n  }\n\n  createTableHeaderAndFooter() {\n    if (this.table) {\n      const classification = this.table.getAttribute('data-classification')\n      const headLength = Number(this.table.getAttribute('data-col-length'))\n      const classificationContent = `<b>${classification}</b>`\n\n      // Headers\n      const header = this.table.createTHead()\n\n      const classificationHeaderRow = header.insertRow(0)\n      const classificationHeaderCell = classificationHeaderRow.insertCell(0)\n      classificationHeaderCell.outerHTML = `<th class=\"govuk-table__header govuk-table__cell--content print-header-footer\" colspan=${headLength}>${classificationContent}</th>`\n\n      // Footers\n      const footer = this.table.createTFoot()\n\n      const classificationFooterRow = footer.insertRow(0)\n      const classificationFooterCell = classificationFooterRow.insertCell(0)\n      classificationFooterCell.outerHTML = `<td class=\"govuk-table__cell govuk-table__cell--content print-header-footer table-row--no-border\" colspan=${headLength}>${classificationContent}</td>`\n    }\n  }\n}\n", "import DprQueryParamClass from '../../../DprQueryParamClass.mjs'\n\nexport default class Columns extends DprQueryParamClass {\n  static getModuleName() {\n    return 'columns'\n  }\n\n  initialise() {\n    this.form = this.getElement()\n    this.submitButton = this.getElement().querySelector('.dpr-apply-columns-button')\n    this.resetButton = this.getElement().querySelector('.dpr-reset-columns-button')\n\n    this.initInputsFromQueryParams()\n    this.initQueryParamsFromInputs(this.form.elements)\n    this.initInputEvents(this.form.elements)\n\n    this.initSubmitButton()\n    this.initResetButton()\n  }\n\n  initSubmitButton() {\n    this.submitButton.addEventListener('click', (e) => {\n      e.preventDefault()\n      this.loadingHelper.showLoadingAnimation()\n      window.location.reload()\n    })\n  }\n\n  initResetButton() {\n    this.resetButton.addEventListener('click', (e) => {\n      e.preventDefault()\n      this.loadingHelper.showLoadingAnimation()\n      this.clearQueryParams('columns')\n      window.location.reload()\n    })\n  }\n}\n", "import { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class DownloadMessage extends DprClientClass {\n  static getModuleName() {\n    return 'download-message'\n  }\n\n  initialise() {\n    this.downloadMessage = this.getElement()\n    if (window.location.href.indexOf('download-disabled') > -1) {\n      this.downloadMessage.classList.remove('dpr-download-message--hidden')\n    }\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport DprFormValidationClass from '../../../DprFormValidationClass.mjs'\n\nexport default class DprFiltersFormClass extends DprFormValidationClass {\n  initFiltersForm({ formId, submitButtonId, resetButtonId, removeSelectedButtonClass }) {\n    this.errorMessages = []\n\n    // Main form\n    this.mainForm = document.getElementById(formId)\n    this.mainForm.noValidate = true\n    this.formFields = Array.from(this.mainForm.elements)\n    this.errorSummary = document.getElementById('query-error-summary')\n\n    // Buttons\n    this.submitButton = document.getElementById(submitButtonId)\n    this.resetButton = document.getElementById(resetButtonId)\n    this.selectedFiltersButtons = document.querySelectorAll(`.${removeSelectedButtonClass}`)\n\n    this.initValues()\n    this.initSubmitButton()\n    this.initResetButton()\n    this.initFormData()\n  }\n\n  initValues() {\n    this.initInputsFromQueryParams()\n    this.initQueryParamsFromInputs(this.mainForm.elements)\n    this.initInputEvents(this.mainForm.elements)\n  }\n\n  initFormData() {\n    this.initFormValidation(this.formFields)\n    this.mainForm.classList.remove('async-filters-form--hidden')\n  }\n\n  initSubmitButton() {\n    this.submitButton.addEventListener('click', (e) => {\n      e.preventDefault()\n      this.initFormData()\n      this.validateForm()\n\n      if (this.mainForm.checkValidity()) {\n        this.submitAction()\n      }\n    })\n  }\n\n  initResetButton() {\n    if (this.resetButton) {\n      this.defaultQuery = this.resetButton.getAttribute('defaultQuery')\n      this.resetButton.addEventListener('click', (e) => {\n        e.preventDefault()\n        this.clearQueryParams('filters')\n        this.resetAction()\n      })\n    }\n  }\n\n  resetAction() {\n    if (this.defaultQuery) {\n      const filters = this.defaultQuery.substring(1)\n      const href = `${window.location.href}&${filters}`\n      window.location.href = href\n    } else {\n      window.location.reload()\n    }\n  }\n\n  submitAction() {\n    window.location.reload()\n  }\n\n  initSelectedFiltersButtons() {\n    if (this.selectedFiltersButtons) {\n      this.selectedFiltersButtons.forEach((button) => {\n        button.addEventListener('click', (e) => {\n          e.preventDefault()\n          const keys = JSON.parse(e.target.getAttribute('data-query-param-key'))\n          const values = JSON.parse(e.target.getAttribute('data-query-param-value'))\n          let constraints = e.target.getAttribute('data-query-constraint-values')\n          constraints = constraints ? JSON.parse(e.target.getAttribute('data-query-constraint-values')) : undefined\n\n          keys.forEach((key) => {\n            values.forEach((value) => {\n              this.updateQueryParam(key, value, 'delete')\n            })\n            if (constraints) {\n              const constraint = constraints.find((con) => con.key === key)\n              if (constraint) {\n                this.updateQueryParam(key, constraint.value)\n              }\n            }\n          })\n\n          this.updateQueryParam('preventDefault', true)\n          window.location.reload()\n        })\n      })\n    }\n  }\n}\n", "// import DprFormValidationClass from '../../DprFormValidationClass.mjs'\nimport DprFiltersFormClass from '../filters-form/clientClass.mjs'\n\nexport default class InteractiveFilters extends DprFiltersFormClass {\n  static getModuleName() {\n    return 'interactive-filters'\n  }\n\n  initialise() {\n    this.initFiltersForm({\n      formId: 'interactive-filters-form',\n      submitButtonId: 'interactive-apply-filters-button',\n      resetButtonId: 'interactive-reset-filters-button',\n      removeSelectedButtonClass: 'interactive-remove-filter-button',\n    })\n\n    this.initSelectedFiltersButtons()\n  }\n}\n", "import { DprClientClass } from './DprClientClass.mjs'\n\nexport default class DprPollingStatusClass extends DprClientClass {\n  getPollingFrquency() {\n    return '2000' // 2 seconds\n  }\n\n  getPollingStatuses() {\n    return ['SUBMITTED', 'STARTED', 'PICKED']\n  }\n\n  getEndStatuses() {\n    return ['FINISHED', 'FAILED', 'EXPIRED', 'ABORTED']\n  }\n\n  getExpiredCheckStatuses() {\n    return ['FAILED', 'EXPIRED', 'ABORTED']\n  }\n\n  async getRequestStatus(metaData, csrfToken) {\n    return this.getStatus('/dpr/getStatus/', metaData, csrfToken)\n  }\n\n  async getExpiredStatus(endpoint, metaData, csrfToken) {\n    return this.getStatus(endpoint, metaData, csrfToken)\n  }\n\n  shouldPollStatus(data) {\n    return JSON.parse(data).some((item) => {\n      return !this.END_STATUSES.includes(item.status)\n    })\n  }\n\n  shouldPollExpired(data) {\n    return JSON.parse(data).some((item) => {\n      return !this.EXPIRED_END_STATUSES.includes(item.status)\n    })\n  }\n\n  async getStatus(endpoint, body, csrfToken) {\n    let response\n    await fetch(endpoint, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'CSRF-Token': csrfToken,\n      },\n      body: JSON.stringify({\n        ...body,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        response = res\n      })\n      .catch((error) => console.error('Error:', error))\n\n    return response\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport DprPollingStatusClass from '../../../DprPollingStatusClass.mjs'\n\nexport default class DprAsyncPolling extends DprPollingStatusClass {\n  static getModuleName() {\n    return 'async-polling-content'\n  }\n\n  initialise() {\n    this.POLLING_STATUSES = this.getPollingStatuses()\n    this.POLLING_FREQUENCY = this.getPollingFrquency()\n\n    this.statusSection = document.getElementById('async-request-polling-status')\n    this.retryRequestButton = document.getElementById('retry-async-request')\n    this.cancelRequestButton = document.getElementById('cancel-async-request')\n    this.viewReportButton = document.getElementById('view-async-report-button')\n\n    this.requestData = this.statusSection.getAttribute('data-request-data')\n    this.currentStatus = this.statusSection.getAttribute('data-current-status')\n    this.csrfToken = this.statusSection.getAttribute('data-csrf-token')\n\n    this.initCancelRequestButton()\n    this.initPollingInterval()\n  }\n\n  async initPollingInterval() {\n    if (this.POLLING_STATUSES.includes(this.currentStatus)) {\n      this.pollingInterval = setInterval(async () => {\n        await this.pollStatus()\n      }, this.POLLING_FREQUENCY)\n    }\n  }\n\n  async pollStatus() {\n    if (this.requestData) {\n      const meta = JSON.parse(this.requestData)\n      const response = await this.getRequestStatus(meta, this.csrfToken)\n\n      // Reload if new status is an end state\n      if (this.currentStatus !== response.status) {\n        clearInterval(this.pollingInterval)\n        window.location.reload()\n      }\n    }\n  }\n\n  initCancelRequestButton() {\n    if (this.cancelRequestButton) {\n      const executionId = this.cancelRequestButton.getAttribute('data-execution-id')\n      const reportId = this.cancelRequestButton.getAttribute('data-report-id')\n      const id = this.cancelRequestButton.getAttribute('data-id')\n      const type = this.cancelRequestButton.getAttribute('data-type')\n      const csrfToken = this.cancelRequestButton.getAttribute('data-csrf-token')\n\n      this.cancelRequestButton.addEventListener('click', async () => {\n        await fetch('/dpr/cancelRequest/', {\n          method: 'post',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'CSRF-Token': csrfToken,\n          },\n          body: JSON.stringify({\n            executionId,\n            reportId,\n            id,\n            type,\n          }),\n        })\n          .then(() => {\n            window.location.reload()\n          })\n          .catch((error) => console.error('Error:', error))\n      })\n    }\n  }\n}\n", "import DprFiltersFormClass from '../../_filters/filters-form/clientClass.mjs'\n\nexport default class AsyncFilters extends DprFiltersFormClass {\n  static getModuleName() {\n    return 'async-filters'\n  }\n\n  initialise() {\n    this.initFiltersForm({\n      formId: 'async-filters-form',\n      submitButtonId: 'async-request-report-button',\n      resetButtonId: 'async-request-reset-filters-button',\n    })\n  }\n\n  initFormData() {\n    const { origin, pathname, search } = window.location\n    document.getElementById('async-filters-form-pathname').value = pathname\n    document.getElementById('async-filters-form-origin').value = origin\n    document.getElementById('async-filters-form-search').value = search\n\n    const params = new URLSearchParams(search)\n    const paramsString = params.size > 0 ? `?${params.toString()}` : ''\n    document.getElementById('async-filters-form-href').value = `${origin}${pathname}${paramsString}`\n    this.initFormValidation(this.formFields)\n    this.mainForm.classList.remove('async-filters-form--hidden')\n  }\n\n  submitAction() {\n    this.mainForm.requestSubmit()\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport { DprClientClass } from './DprClientClass.mjs'\n\nexport default class DprSyncLoading extends DprClientClass {\n  static getModuleName() {\n    return 'sync-loading'\n  }\n\n  initialise() {\n    this.element = this.getElement()\n    this.form = this.element.querySelector('#dpr-sync-loading-form')\n\n    this.load()\n  }\n\n  async load() {\n    this.form.submit()\n  }\n}\n", "/* global dayjs */\n\nimport { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class DateInput extends DprClientClass {\n  static getModuleName() {\n    return 'date-input'\n  }\n\n  initialise() {\n    const element = this.getElement()\n    this.dateInput = element.querySelector(`input.moj-js-datepicker-input`)\n    this.setToValueTriggers = document.querySelectorAll(`[data-set-min-max-trigger='true']`)\n\n    this.required = this.getElement().getAttribute('data-required')\n    this.displayName = this.getElement().getAttribute('data-display-name')\n    this.pattern = this.getElement().getAttribute('data-pattern')\n    this.patternHint = this.getElement().getAttribute('data-pattern-hint')\n    this.min = this.getElement().getAttribute('data-min')\n    this.max = this.getElement().getAttribute('data-max')\n\n    this.setValidationOnInputEl()\n    this.setMinMaxEventListener()\n    this.setToMinMax()\n    this.setToValue()\n  }\n\n  setValidationOnInputEl() {\n    if (this.required && this.required === 'true') {\n      this.dateInput.setAttribute('required', true)\n    }\n    if (this.min) this.dateInput.setAttribute('min', this.min)\n    if (this.max) this.dateInput.setAttribute('max', this.max)\n\n    this.dateInput.setAttribute('display-name', this.displayName)\n    this.dateInput.setAttribute('pattern', this.pattern)\n    this.dateInput.setAttribute('pattern-hint', this.patternHint)\n  }\n\n  setMinMaxEventListener() {\n    this.dateInput.addEventListener('blur', () => {\n      this.setToMinMax()\n    })\n  }\n\n  setToMinMax() {\n    if (this.dateInput.value) {\n      const dateValue = new Date(this.dateInput.value)\n\n      if (this.min) {\n        const minDate = new Date(this.min)\n        if (dateValue < minDate) {\n          this.dateInput.value = dayjs(this.min).format('DD/MM/YYYY')\n        }\n      }\n\n      if (this.max) {\n        const maxDate = new Date(this.max)\n        if (dateValue > maxDate) {\n          this.dateInput.value = dayjs(this.max).format('DD/MM/YYYY')\n        }\n      }\n    }\n\n    const changeEvent = new Event('change')\n    this.dateInput.dispatchEvent(changeEvent)\n  }\n\n  setToValue() {\n    this.setToValueTriggers.forEach((set) => {\n      set.addEventListener('click', (e) => {\n        e.preventDefault()\n        const value = e.target.getAttribute('data-set-min-max-value')\n        const inputId = e.target.getAttribute('data-set-to-input')\n        const input = document.getElementById(inputId)\n\n        input.value = value\n        const changeEvent = new Event('change')\n        input.dispatchEvent(changeEvent)\n      })\n    })\n  }\n}\n", "/* eslint-disable class-methods-use-this */\n/* global dayjs */\n\nimport { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class DateRangeInput extends DprClientClass {\n  static getModuleName() {\n    return 'date-range-input'\n  }\n\n  initialise() {\n    this.dateRangeInputs = document.getElementById('dpr-date-range')\n    this.filtersAccordion = document.getElementById('dpr-interactive-filters-details')\n    this.fieldName = this.dateRangeInputs.getAttribute('data-field-name')\n\n    this.startInputID = `filters.${this.fieldName}.start`\n    this.endInputID = `filters.${this.fieldName}.end`\n    this.durationInputID = `filters.${this.fieldName}.relative-duration`\n\n    this.relativeRangeRadioButtons = document.querySelectorAll(`input[name='${this.durationInputID}']`)\n    this.startInput = document.querySelector(`input[name='${this.startInputID}']`)\n    this.endInput = document.querySelector(`input[name='${this.endInputID}']`)\n\n    this.startRequired = this.startInput.required\n    this.endRequired = this.endInput.required\n\n    this.datePickerTab = document.getElementById('tab_date-picker')\n    this.relativeDurationTab = document.getElementById('tab_relative-range')\n    this.durationValue = undefined\n\n    if (this.datePickerTab && this.relativeDurationTab) {\n      this.initDatePickerTabClick()\n      this.initRelativeDurationTabClick()\n      this.initTabs()\n      this.initDurationRadionButtonClick()\n    }\n  }\n\n  initTabs() {\n    this.queryParams = new URLSearchParams(window.location.search)\n    if (this.queryParams.has(this.durationInputID)) {\n      this.relativeRangeRadioButtons.forEach((durationRadioButton) => {\n        this.updateCheckedDuration(durationRadioButton)\n      })\n    }\n  }\n\n  initDatePickerTabClick() {\n    this.datePickerTab.addEventListener('click', () => {\n      let value\n      this.queryParams = new URLSearchParams(window.location.search)\n      if (this.queryParams.has(this.durationInputID)) {\n        value = this.queryParams.get(this.durationInputID)\n        this.removeSearchParam(this.durationInputID)\n      }\n      this.updateInputs(value)\n      window.location.hash = 'date-picker'\n    })\n  }\n\n  initRelativeDurationTabClick() {\n    this.relativeDurationTab.addEventListener('click', () => {\n      this.relativeRangeRadioButtons.forEach((durationRadioButton) => {\n        this.updateCheckedDuration(durationRadioButton)\n      })\n      window.location.hash = 'relative-range'\n    })\n  }\n\n  initDurationRadionButtonClick () {\n    this.relativeRangeRadioButtons.forEach((durationRadioButton) => {\n      durationRadioButton.addEventListener('click', (e) => {\n        const durationValue = e.target.value\n        this.durationValue = durationValue\n        this.updateInputs(durationValue)\n        this.removeRequiredFromDatePickers()\n      })\n    })\n  }\n\n  removeSearchParam(name, name2) {\n    this.queryParams = new URLSearchParams(window.location.search)\n    this.queryParams.delete(name)\n    if (name2) this.queryParams.delete(name2)\n\n    window.history.replaceState(null, null, `?${this.queryParams.toString()}`)\n  }\n\n  updateCheckedDuration(durationRadioButton) {\n    if (durationRadioButton.checked) {\n      const durationValue = durationRadioButton.value\n      this.updateInputs(durationValue)\n      const changeEvent = new Event('change')\n      durationRadioButton.dispatchEvent(changeEvent)\n    }\n  }\n\n  removeRequiredFromDatePickers() {\n    this.startInput.removeAttribute('required')\n    this.endInput.removeAttribute('required')\n    this.startInput.value = ''\n    this.endInput.value = ''\n  }\n\n  updateInputs (durationValue) {\n    this.startInput.required = this.startRequired\n    this.endInput.required = this.endRequired\n\n    if (durationValue || this.durationValue) {\n      const d = durationValue || this.durationValue\n      const { startDate, endDate } = this.calculateDateForDatepicker(d)\n      this.startInput.value = startDate\n      this.endInput.value = endDate\n    }\n    const changeEvent = new Event('change')\n    this.startInput.dispatchEvent(changeEvent)\n    this.endInput.dispatchEvent(changeEvent)\n  }\n\n  calculateDateForDatepicker(duration) {\n    let startDate\n    let endDate\n\n    switch (duration) {\n      case 'yesterday':\n        endDate = dayjs()\n        startDate = endDate.subtract(1, 'day')\n        break\n      case 'tomorrow':\n        startDate = dayjs()\n        endDate = startDate.add(1, 'day')\n        break\n      case 'last-week':\n        endDate = dayjs()\n        startDate = endDate.subtract(1, 'week')\n        break\n      case 'next-week':\n        startDate = dayjs()\n        endDate = startDate.add(1, 'week')\n        break\n      case 'last-month':\n        endDate = dayjs()\n        startDate = endDate.subtract(1, 'month')\n        break\n      case 'next-month':\n        startDate = dayjs()\n        endDate = startDate.add(1, 'month')\n        break\n      default:\n        break\n    }\n\n    return {\n      startDate: startDate.format('DD/MM/YYYY').toString(),\n      endDate: endDate.format('DD/MM/YYYY').toString(),\n    }\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class Autocomplete extends DprClientClass {\n  static getModuleName() {\n    return 'autocomplete-text-input'\n  }\n\n  constructor(element) {\n    super(element)\n\n    const listId = this.getTextInput().getAttribute('aria-owns')\n    this.listItemsSelector = `#${listId} li`\n    this.listParentSelector = `#${listId} ul`\n  }\n\n  initialise() {\n    const textInput = this.getTextInput()\n    textInput.addEventListener('keyup', (event) => {\n      this.onTextInput(event, textInput)\n    })\n\n    this.getElement()\n      .querySelectorAll('.autocomplete-text-input-list-button')\n      .forEach((button) => {\n        button.addEventListener('click', (event) => {\n          this.onOptionClick(event, textInput, this.getElement())\n        })\n      })\n  }\n\n  getTextInput() {\n    return this.getElement().querySelector('.autocomplete-text-input-box')\n  }\n\n  onTextInput(event, textInput) {\n    const minLength = Number(textInput.dataset.minimumLength)\n    const { resourceEndpoint } = textInput.dataset\n    const searchValue = event.target.value.toLowerCase()\n\n    if (resourceEndpoint) {\n      if (searchValue.length >= minLength) {\n        this.addItem(this.clearListAndRecreateTemplate(), '<i>Searching...</i>')\n        this.populateOptionsDynamically(resourceEndpoint, searchValue, textInput, () =>\n          this.clearListAndRecreateTemplate(),\n        )\n      } else {\n        this.clearListAndRecreateTemplate()\n      }\n    } else {\n      this.getElement()\n        .querySelectorAll(this.listItemsSelector)\n        .forEach((item) => {\n          if (searchValue.length >= minLength &&\n            this.isMatchingStaticOptionNameOrDisplayPrefix(this.getInputListButton(item), searchValue, item)) {\n            item.classList.remove('autocomplete-text-input-item-hide')\n          } else {\n            item.classList.add('autocomplete-text-input-item-hide')\n          }\n        })\n    }\n\n    if (searchValue.length === 0) {\n      const changeEvent = new Event('change')\n      textInput.dispatchEvent(changeEvent)\n    }\n  }\n\n  getInputListButton(item) {\n    return item.querySelector('.autocomplete-text-input-list-button')\n  }\n\n  isMatchingStaticOptionNameOrDisplayPrefix(inputListButton, searchValue, item) {\n    return this.isStaticOptionsNamePrefix(inputListButton.dataset.staticOptionNameValue, searchValue)\n      || item.innerText.trim().toLowerCase().startsWith(searchValue)\n  }\n\n  isStaticOptionsNamePrefix(staticOptionNameValue, searchValue) {\n    return staticOptionNameValue && staticOptionNameValue.trim().toLowerCase().startsWith(searchValue)\n  }\n\n  async populateOptionsDynamically(resourceEndpoint, searchValue, textInput, templateProvider) {\n    try {\n      const response = await fetch(resourceEndpoint.replace('{prefix}', encodeURI(searchValue)))\n      const results = await response.json()\n\n      if (searchValue === textInput.value.toLowerCase()) {\n        const template = templateProvider()\n\n        results.forEach((r) => {\n          this.addItem(template, r, (event) => {\n            this.onOptionClick(event, textInput, this.getElement())\n          })\n        })\n      }\n    } catch (error) {\n      this.addItem(templateProvider(), `Failed to retrieve results: ${error}`)\n    }\n  }\n\n  onOptionClick(event, textInput, topLevelElement) {\n    event.preventDefault()\n    // eslint-disable-next-line no-param-reassign\n    textInput.value = event.target.innerText.trim()\n    textInput.staticOptionNameValue = event.target.dataset.staticOptionNameValue\n    textInput.focus()\n    const changeEvent = new Event('change')\n    textInput.dispatchEvent(changeEvent)\n\n    topLevelElement.querySelectorAll('li').forEach((item) => {\n      item.classList.add('autocomplete-text-input-item-hide')\n    })\n  }\n\n  addItem(template, content, clickEvent) {\n    const item = template.cloneNode(true)\n    item.querySelector('button').innerHTML = content\n    item.classList.remove('autocomplete-text-input-item-hide')\n    this.getElement().querySelector(this.listParentSelector).appendChild(item)\n\n    if (clickEvent) {\n      item.addEventListener('click', (event) => {\n        clickEvent(event)\n      })\n    }\n  }\n\n  clearListAndRecreateTemplate() {\n    const template = this.getElement().querySelector(this.listItemsSelector).cloneNode(true)\n    template.classList.add('autocomplete-text-input-item-hide')\n    this.getElement()\n      .querySelectorAll(this.listItemsSelector)\n      .forEach((e) => e.remove())\n    this.getElement().querySelector(this.listParentSelector).append(template)\n    return template\n  }\n}\n", "/* eslint-disable class-methods-use-this */\n/* global dayjs */\n\nimport { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class GranularDateRangeInput extends DprClientClass {\n  static getModuleName() {\n    return 'granular-date-range-input'\n  }\n\n  initialise() {\n    this.filter = this.getElement()\n    this.fieldName = this.filter.getAttribute('data-field-name')\n    const idPrefix = `filters.${this.fieldName}`\n\n    this.quickFiltersInput = this.filter.querySelector(`select[name='${idPrefix}.quick-filter']`)\n    this.granularityInput = this.filter.querySelector(`select[name='${idPrefix}.granularity']`)\n    this.startInput = this.filter.querySelector(`input[name='${idPrefix}.start']`)\n    this.endInput = this.filter.querySelector(`input[name='${idPrefix}.end']`)\n\n    this.initStartEndInputChangetEvent()\n    this.initGranularityChangeEvent()\n    this.initQuickFilterChangeEvent()\n  }\n\n  initGranularityChangeEvent() {\n    this.granularityInput.addEventListener('change', (e) => {\n      this.resetQuickFilters()\n    })\n  }\n\n  initQuickFilterChangeEvent() {\n    this.quickFiltersInput.addEventListener('change', (e) => {\n      this.updateStartEndValues(e.target.value)\n    })\n  }\n\n  initStartEndInputChangetEvent() {\n    this.startInput.addEventListener('change', (e) => {\n      this.resetQuickFilters()\n    })\n    this.endInput.addEventListener('change', (e) => {\n      this.resetQuickFilters()\n    })\n  }\n\n  setGranularityValue(value) {\n    this.granularityInput.value = value\n  }\n\n  setStartValue(value) {\n    this.startInput.value = value\n  }\n\n  setEndValue(value) {\n    this.endInput.value = value\n  }\n\n  resetQuickFilters() {\n    this.quickFiltersInput.value = 'none'\n    const queryParams = new URLSearchParams(window.location.search)\n    queryParams.set(this.quickFiltersInput.id, 'none')\n    window.history.replaceState(null, null, `?${queryParams.toString()}`)\n  }\n\n  updateStartEndValues(quickFilterValue) {\n    let startDate\n    let endDate\n    let granularity\n\n    switch (quickFilterValue) {\n      case 'today':\n        endDate = dayjs()\n        startDate = dayjs()\n        granularity = 'daily'\n        break\n      case 'yesterday':\n        endDate = dayjs().subtract(1, 'day')\n        startDate = dayjs().subtract(1, 'day')\n        granularity = 'daily'\n        break\n      case 'last-seven-days':\n        endDate = dayjs()\n        startDate = endDate.subtract(7, 'day').add(1, 'day')\n        granularity = 'daily'\n        break\n      case 'last-thirty-days':\n        endDate = dayjs()\n        startDate = endDate.subtract(30, 'day').add(1, 'day')\n        granularity = 'daily'\n        break\n      case 'last-month':\n        endDate = dayjs()\n        startDate = endDate.subtract(1, 'month').add(1, 'day')\n        granularity = 'monthly'\n        break\n      case 'last-full-month':\n        endDate = dayjs().subtract(1, 'month').endOf('month')\n        startDate = endDate.startOf('month')\n        granularity = 'monthly'\n        break\n      case 'last-ninety-days':\n        endDate = dayjs()\n        startDate = endDate.subtract(90, 'day').add(1, 'day')\n        granularity = 'daily'\n        break\n      case 'last-three-months':\n        endDate = dayjs()\n        startDate = endDate.subtract(3, 'month').add(1, 'day')\n        granularity = 'monthly'\n        break\n      case 'last-full-three-months':\n        endDate = dayjs().subtract(1, 'month').endOf('month')\n        startDate = endDate.subtract(2, 'month').startOf('month')\n        granularity = 'monthly'\n        break\n      case 'last-six-months':\n        endDate = dayjs()\n        startDate = endDate.subtract(6, 'month').add(1, 'day')\n        granularity = 'monthly'\n        break\n      case 'last-full-six-months':\n        endDate = dayjs().subtract(1, 'month').endOf('month')\n        startDate = endDate.subtract(6, 'month').startOf('month')\n        granularity = 'monthly'\n        break\n      case 'last-year':\n        endDate = dayjs()\n        startDate = endDate.subtract(1, 'year').add(1, 'day')\n        granularity = 'annually'\n        break\n      case 'last-full-year':\n        endDate = dayjs().subtract(1, 'year').endOf('year')\n        startDate = endDate.startOf('year')\n        granularity = 'annually'\n        break\n      case 'tomorrow':\n        endDate = dayjs().add(1, 'day')\n        startDate = dayjs().add(1, 'day')\n        granularity = 'daily'\n        break\n      case 'next-seven-days':\n        startDate = dayjs()\n        endDate = dayjs().add(7, 'day').subtract(1, 'day')\n        granularity = 'daily'\n        break\n      case 'next-thirty-days':\n        startDate = dayjs()\n        endDate = dayjs().add(30, 'day').subtract(1, 'day')\n        granularity = 'daily'\n        break\n      case 'next-month':\n        startDate = dayjs()\n        endDate = dayjs().add(1, 'month').subtract(1, 'day')\n        granularity = 'monthly'\n        break\n      case 'next-full-month':\n        startDate = dayjs().add(1, 'month').startOf('month')\n        endDate = startDate.endOf('month')\n        granularity = 'monthly'\n        break\n      case 'next-ninety-days':\n        startDate = dayjs()\n        endDate = dayjs().add(90, 'day').subtract(1, 'day')\n        granularity = 'daily'\n        break\n      case 'next-three-months':\n        startDate = dayjs()\n        endDate = dayjs().add(3, 'month').subtract(1, 'day')\n        granularity = 'monthly'\n        break\n      case 'next-full-three-months':\n        startDate = dayjs().add(1, 'month').startOf('month')\n        endDate = startDate.add(2, 'month').endOf('month')\n        granularity = 'monthly'\n        break\n      case 'next-year':\n        startDate = dayjs()\n        endDate = dayjs().add(1, 'year').subtract(1, 'day')\n        granularity = 'annually'\n        break\n      case 'next-full-year':\n        startDate = dayjs().add(1, 'year').startOf('year')\n        endDate = startDate.endOf('year')\n        granularity = 'annually'\n        break\n      default:\n        break\n    }\n\n    this.setStartValue(startDate.format('DD/MM/YYYY').toString())\n    this.setEndValue(endDate.format('DD/MM/YYYY').toString())\n    this.setGranularityValue(granularity)\n\n    const queryParams = new URLSearchParams(window.location.search)\n    queryParams.set(this.granularityInput.id, granularity)\n    queryParams.set(this.startInput.id, startDate.format('YYYY/MM/DD').toString())\n    queryParams.set(this.endInput.id, endDate.format('YYYY/MM/DD').toString())\n    window.history.replaceState(null, null, `?${queryParams.toString()}`)\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport DprPollingStatusClass from '../../../DprPollingStatusClass.mjs'\n\nexport default class DprAsyncRequestList extends DprPollingStatusClass {\n  static getModuleName() {\n    return 'async-request-list'\n  }\n\n  initialise() {\n    this.END_STATUSES = this.getEndStatuses()\n    this.EXPIRED_END_STATUSES = this.getExpiredCheckStatuses()\n    this.POLLING_FREQUENCY = this.getPollingFrquency()\n\n    this.requestList = document.getElementById('dpr-async-request-component')\n    this.requestData = this.requestList.getAttribute('data-request-data')\n    this.csrfToken = this.requestList.getAttribute('data-csrf-token')\n    this.removeActions = document.querySelectorAll('.dpr-remove-requested-report-button')\n\n    this.initItemActions()\n    this.initPollingIntervals()\n  }\n\n  async initPollingIntervals() {\n    await this.checkIfExpired()\n\n    if (this.requestData) {\n      if (this.shouldPollExpired(this.requestData)) {\n        this.expiredInterval = setInterval(async () => {\n          await this.checkIfExpired()\n        }, '60000') // 1 minute\n      }\n\n      if (this.shouldPollStatus(this.requestData)) {\n        this.pollingInterval = setInterval(async () => {\n          await this.pollStatus()\n        }, this.POLLING_FREQUENCY)\n      }\n    }\n  }\n\n  async checkIfExpired() {\n    await Promise.all(\n      JSON.parse(this.requestData).map(async (metaData) => {\n        if (!this.EXPIRED_END_STATUSES.includes(metaData.status)) {\n          const response = await this.getExpiredStatus('/dpr/getRequestedExpiredStatus/', metaData, this.csrfToken)\n\n          if (response && response.isExpired) {\n            clearInterval(this.expiredInterval)\n            window.location.reload()\n          }\n        }\n      }),\n    )\n  }\n\n  async pollStatus() {\n    await Promise.all(\n      JSON.parse(this.requestData).map(async (metaData) => {\n        // Don't poll if current state is an end state\n        if (!this.END_STATUSES.includes(metaData.status)) {\n          const response = await this.getRequestStatus(metaData, this.csrfToken)\n\n          // Reload if new status is an end state\n          if (this.END_STATUSES.includes(response.status)) {\n            clearInterval(this.pollingInterval)\n            window.location.reload()\n          }\n        }\n      }),\n    )\n  }\n\n  initItemActions() {\n    this.removeActions.forEach((button) => {\n      const id = button.getAttribute('data-execution-id')\n      button.addEventListener('click', async (e) => {\n        e.preventDefault()\n        await this.removeItemFromList(id)\n      })\n    })\n  }\n\n  async removeItemFromList(executionId) {\n    let response\n    await fetch('/dpr/removeRequestedItem/', {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'CSRF-Token': this.csrfToken,\n      },\n      body: JSON.stringify({\n        executionId,\n      }),\n    })\n      .then(() => {\n        window.location.reload()\n      })\n      .catch((error) => console.error('Error:', error))\n\n    return response\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport DprPollingStatusClass from '../../../DprPollingStatusClass.mjs'\n\nexport default class DprRecentlyViewedList extends DprPollingStatusClass {\n  static getModuleName() {\n    return 'recently-viewed-list'\n  }\n\n  initialise() {\n    this.EXPIRED_END_STATUSES = this.getExpiredCheckStatuses()\n    this.POLLING_FREQUENCY = '60000' // 1 min\n\n    this.viewedList = document.getElementById('dpr-recently-viewed-component')\n    this.viewedReportData = this.viewedList.getAttribute('data-request-data')\n    this.csrfToken = this.viewedList.getAttribute('data-csrf-token')\n    this.removeActions = document.querySelectorAll('.dpr-remove-viewed-report-button')\n\n    this.initItemActions()\n    this.initPollingIntervals()\n  }\n\n  async initPollingIntervals() {\n    await this.checkIsExpired()\n\n    if (this.viewedReportData && this.shouldPollExpired(this.viewedReportData)) {\n      this.expiredViewedInterval = setInterval(async () => {\n        await this.checkIsExpired()\n      }, this.POLLING_FREQUENCY)\n    }\n  }\n\n  async checkIsExpired() {\n    await Promise.all(\n      JSON.parse(this.viewedReportData).map(async (metaData) => {\n        if (metaData.status !== 'EXPIRED') {\n          const response = await this.getExpiredStatus('/dpr/getExpiredStatus/', metaData, this.csrfToken)\n          if (response && response.isExpired) {\n            window.location.reload()\n            clearInterval(this.expiredViewedInterval)\n          }\n        }\n      }),\n    )\n  }\n\n  initItemActions() {\n    this.removeActions.forEach((button) => {\n      const id = button.getAttribute('data-execution-id')\n      button.addEventListener('click', async (e) => {\n        e.preventDefault()\n        await this.removeItemFromList(id)\n      })\n    })\n  }\n\n  async removeItemFromList(executionId) {\n    let response\n    await fetch('/dpr/removeViewedItem/', {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'CSRF-Token': this.csrfToken,\n      },\n      body: JSON.stringify({\n        executionId,\n      }),\n    })\n      .then(() => {\n        window.location.reload()\n      })\n      .catch((error) => console.error('Error:', error))\n\n    return response\n  }\n}\n", "/* eslint-disable class-methods-use-this */\n/* global Chart */\n/* global ChartDataLabels */\n\nimport { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class ChartVisualisation extends DprClientClass {\n  setupCanvas() {\n    this.chartContext = this.getElement().querySelector('canvas')\n\n    // data\n    this.id = this.chartContext.getAttribute('id')\n    this.chartParams = JSON.parse(this.getElement().getAttribute('data-dpr-chart-data'))\n    this.type = this.getElement().getAttribute('data-dpr-chart-type')\n    this.setValueSuffix()\n\n    // elements\n    this.legend = this.getElement().querySelector(`#js-legend-${this.id}`)\n\n    // ChartCard elements\n    this.tooltipDetailsEl = document.getElementById(`dpr-${this.id}-tooltip-details`)\n    this.headlineValuesEl = document.getElementById(`dpr-${this.id}-headline-values`)\n    this.labelElement = document.getElementById(`dpr-${this.id}-label`)\n    this.valueElement = document.getElementById(`dpr-${this.id}-value`)\n    this.legendElement = document.getElementById(`dpr-${this.id}-legend`)\n    this.legendElement = document.getElementById(`dpr-${this.id}-legend`)\n\n    // Time series\n    this.timeseries = this.getElement().getAttribute('data-dpr-chart-timeseries')\n    if (this.timeseries || this.type === 'line') {\n      this.daterangeInputs = document.querySelectorAll('.dpr-granular-date-range')\n      if (this.daterangeInputs && this.daterangeInputs.length) {\n        this.daterangeInputs.forEach((input) => {\n          this.partialStart = input.getAttribute('data-partial-start') === 'true'\n          this.partialEnd = input.getAttribute('data-partial-end') === 'true'\n        })\n      } else {\n        this.partialStart = false\n        this.partialEnd = false\n      }\n    }\n\n    // flags\n    this.singleDataset = this.chartParams.datasets.length === 1\n  }\n\n  initChart() {\n    Chart.defaults.font.family = 'GDS Transport'\n    Chart.register(ChartDataLabels)\n    Chart.defaults.font.size = 12\n\n    this.chart = new Chart(this.chartContext, this.chartData)\n    this.initChartEvents()\n  }\n\n  // Accessible colours from the MoJ Pattern Library\n  getColourPallette() {\n    return [\n      {\n        name: 'blue',\n        hex: '#5694ca',\n      },\n      {\n        name: 'purple',\n        hex: '#912b88',\n      },\n      {\n        name: 'green',\n        hex: '#00703c',\n      },\n      {\n        name: 'dark_blue',\n        hex: '#003078',\n      },\n      {\n        name: 'orange',\n        hex: '#f47738',\n      },\n      {\n        name: 'orange',\n        hex: '#28a197',\n      },\n    ]\n  }\n\n  mapHexColourToName(hex, ctx) {\n    const pallette = ctx.getColourPallette()\n    const colour = pallette.find((p) => {\n      return p.hex === hex\n    })\n    return colour ? colour.name : ''\n  }\n\n  createDatasets(datasets, styling) {\n    return datasets.map((d, i) => {\n      const { label, data } = d\n      const s = styling[i % 6] ? styling[i % 6] : styling[0]\n      return {\n        label,\n        data,\n        ...s,\n      }\n    })\n  }\n\n  generateChartData(settings) {\n    const { datasets, labels } = this.chartParams\n    const { options, styling, datalabels, plugins, pluginsOptions, toolTipOptions, hoverEvent } = settings\n    return {\n      type: this.type,\n      data: {\n        labels,\n        datasets: this.createDatasets(datasets, styling),\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        animation: {\n          duration: 0,\n        },\n        hover: {\n          animationDuration: 0,\n        },\n        ...(options && options),\n        ...(hoverEvent && hoverEvent),\n        plugins: {\n          legend: {\n            position: 'bottom',\n          },\n          ...(pluginsOptions && pluginsOptions),\n          ...(datalabels && { datalabels }),\n          tooltip: {\n            ...this.setToolTip(),\n            ...(toolTipOptions && toolTipOptions),\n          },\n        },\n      },\n      plugins: plugins && plugins.length ? [...plugins] : [],\n    }\n  }\n\n  setToolTip() {\n    return {\n      backgroundColor: '#FFF',\n      bodyColor: '#000',\n      titleFont: {\n        size: 16,\n      },\n      bodyFont: {\n        size: 16,\n      },\n      titleColor: '#000',\n      displayColors: false,\n      borderWidth: 1,\n      borderColor: '#b1b4b6',\n      cornerRadius: 0,\n      padding: 20,\n      footerFont: {\n        weight: 'bold',\n      },\n      animation: {\n        duration: 0,\n      },\n    }\n  }\n\n  setHoverValue({ label, value, legend, ctx }) {\n    if (ctx.tooltipDetailsEl) {\n      ctx.tooltipDetailsEl.style.display = 'block'\n      ctx.labelElement.innerHTML = ctx.singleDataset ? `${label}` : `${legend}: ${label}`\n      ctx.valueElement.innerHTML = `${value}`\n    }\n    if (ctx.headlineValuesEl) {\n      ctx.headlineValuesEl.style.display = 'none'\n    }\n    if (!legend) {\n      ctx.legendElement.style.display = 'none'\n    }\n  }\n\n  setValueSuffix() {\n    this.unit = this.getElement().getAttribute('data-dpr-chart-unit')\n    this.suffix = this.unit === 'percentage' ? '%' : ''\n  }\n\n  isPercentage() {\n    return this.unit === 'percentage'\n  }\n\n  initChartEvents() {\n    this.chart.canvas.addEventListener('mouseout', (e) => {\n      if (this.tooltipDetailsEl) this.tooltipDetailsEl.style.display = 'none'\n      if (this.headlineValuesEl) this.headlineValuesEl.style.display = 'block'\n    })\n  }\n}\n", "/* eslint-disable no-underscore-dangle */\n/* eslint-disable class-methods-use-this */\nimport ChartVisualisation from '../clientClass.mjs'\n\nexport default class BarChartVisualisation extends ChartVisualisation {\n  static getModuleName() {\n    return 'bar-chart'\n  }\n\n  initialise() {\n    this.setupCanvas()\n    this.settings = this.initSettings()\n    this.chartData = this.generateChartData(this.settings)\n    this.initChart(this.chartData)\n  }\n\n  initSettings() {\n    return {\n      options: this.setOptions(),\n      toolTipOptions: this.setToolTipOptions(),\n      datalabels: this.setDataLabels(),\n      styling: this.setDatasetStyling(),\n    }\n  }\n\n  setDatasetStyling() {\n    const pallette = this.getColourPallette()\n    return pallette.map((colour) => {\n      return {\n        borderColor: colour.hex,\n        ...this.setBackgroundColour(colour.hex),\n        datalabels: {\n          align: 'center',\n          anchor: 'center',\n        },\n      }\n    })\n  }\n\n  setBackgroundColour(colour) {\n    const lastIndex = this.chartParams.labels.length - 1\n    const backgroundColors = []\n    const borderWidths = []\n    const borderColors = []\n\n    this.chartParams.labels.forEach((label, i) => {\n      if ((this.partialEnd && i === lastIndex) || (this.partialStart && i === 0)) {\n        backgroundColors.push(colour)\n        borderWidths.push(3)\n        borderColors.push('#b1b4b6')\n      } else {\n        backgroundColors.push(colour)\n        borderWidths.push(0)\n        borderColors.push(colour)\n      }\n    })\n\n    return {\n      backgroundColor: backgroundColors,\n      borderWidth: borderWidths,\n      borderColor: borderColors,\n    }\n  }\n\n  setToolTipOptions() {\n    const ctx = this\n    return {\n      callbacks: {\n        title(context) {\n          const { label, dataset } = context[0]\n          const { label: establishmentId } = dataset\n          const title = ctx.singleDataset ? `${label}` : `${establishmentId}: ${label}`\n          return title\n        },\n        label(context) {\n          const { label } = context\n          const { data, label: legend } = context.dataset\n          const value = `${data[context.dataIndex]}${ctx.suffix}`\n          ctx.setHoverValue({ label, value, legend, ctx })\n          return value\n        },\n      },\n    }\n  }\n\n  setOptions() {\n    const { indexAxis, stacked } = this.chartParams\n    return {\n      indexAxis: indexAxis || 'x',\n      ...(stacked && {\n        scales: {\n          x: {\n            stacked: true,\n          },\n          y: {\n            stacked: true,\n          },\n        },\n      }),\n    }\n  }\n\n  setDataLabels() {\n    return {\n      color: '#FFF',\n      display: () => {\n        return !this.timeseries\n      },\n      formatter: (value) => {\n        return `${value}${this.suffix}`\n      },\n      labels: {\n        title: {\n          font: {\n            weight: 'bold',\n            size: 16,\n            color: '#FFF',\n          },\n        },\n      },\n    }\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport ChartVisualisation from '../clientClass.mjs'\n\nexport default class DoughnutChartVisualisation extends ChartVisualisation {\n  static getModuleName() {\n    return 'doughnut-chart'\n  }\n\n  initialise() {\n    this.setupCanvas()\n    this.settings = this.initSettings()\n    this.chartData = this.generateChartData(this.settings)\n    this.initChart(this.chartData)\n  }\n\n  initSettings() {\n    return {\n      options: this.setOptions(),\n      styling: this.setDatasetStyling(),\n      datalabels: this.setDataLabels(),\n      pluginsOptions: this.setPluginsOptions(),\n      toolTipOptions: this.setToolTipOptions(),\n      plugins: this.setPlugins(),\n    }\n  }\n\n  setDatasetStyling() {\n    const pallette = this.getColourPallette()\n    const backgroundColor = pallette.map((p) => p.hex)\n    return [\n      {\n        backgroundColor: [...backgroundColor, ...backgroundColor],\n        hoverOffset: 4,\n        datalabels: {\n          anchor: 'center',\n          borderWidth: 0,\n        },\n      },\n    ]\n  }\n\n  setOptions() {\n    const cutoutValue = this.chartParams.datasets.length === 1 ? '50%' : '20%'\n    return {\n      cutout: cutoutValue,\n    }\n  }\n\n  setPluginsOptions() {\n    return {\n      legend: {\n        display: true,\n        position: 'bottom',\n      },\n    }\n  }\n\n  setPlugins() {\n    const plugins = []\n    if (this.chartParams.datasets.length === 1 && !this.isPercentage) {\n      plugins.push(this.setCentralText())\n    }\n    return plugins\n  }\n\n  setCentralText() {\n    return {\n      // Put the total in the center of the donut\n      id: 'text',\n      beforeDraw(chart) {\n        const { width } = chart\n        const { height } = chart\n        const { ctx } = chart\n\n        ctx.textBaseline = 'middle'\n        let fontSize = 2.5\n        ctx.font = `100 ${fontSize}em GDS Transport`\n        ctx.fillStyle = '\t#505a5f'\n\n        // Accumulated total\n        const total = chart.data.datasets[0].data.reduce((a, c) => a + c, 0)\n        const text = total\n        const textX = Math.round((width - ctx.measureText(text).width) / 2)\n        const textY = height / 2\n\n        ctx.fillText(text, textX, textY)\n        ctx.save()\n\n        ctx.textBaseline = 'middle'\n        fontSize = 1\n        ctx.font = `100 ${fontSize}em GDS Transport`\n        ctx.fillStyle = '\t#505a5f'\n\n        // Chart title\n        const title = 'Total'\n        const titleX = Math.round((width - ctx.measureText(title).width) / 2)\n        const titleY = textY + 30\n\n        ctx.fillText(title, titleX, titleY)\n        ctx.save()\n      },\n    }\n  }\n\n  setLegend() {\n    const classContext = this\n    const { legend, suffix } = this\n    return {\n      id: 'legend',\n      beforeInit(chart) {\n        const ul = document.createElement('ul')\n        const { labels } = chart.data\n        const { backgroundColor, data } = chart.data.datasets[0]\n\n        labels.forEach((label, i) => {\n          const colourIndex = i % backgroundColor.length\n          const colour = backgroundColor[colourIndex]\n          const colourName = classContext.mapHexColourToName(colour, classContext)\n          const value = chart.data.datasets.length === 1 ? `${data[i]}${suffix}` : ''\n\n          ul.innerHTML += `\n              <li aria-label=\"${label} ${value}\">\n                <span class=\"chart-colour__${colourName}\">${value}</span>\n                ${label}\n              </li>\n            `\n        })\n        legend.appendChild(ul)\n        return legend.appendChild(ul)\n      },\n    }\n  }\n\n  setToolTipOptions() {\n    const ctx = this\n    return {\n      callbacks: {\n        title(context) {\n          const { label, dataset } = context[0]\n          const { label: establishmentId } = dataset\n          const title = ctx.singleDataset ? `${label}` : `${establishmentId}: ${label}`\n          return title\n        },\n        label(context) {\n          const { label, parsed: value, dataset } = context\n          const { label: legend } = dataset\n          const dataArr = dataset.data\n\n          let toolipValue = `${value}${ctx.suffix}`\n\n          if (!ctx.isPercentage) {\n            const val = dataArr.reduce((sum, d) => sum + Number(d), 0)\n            const percentage = `${((value * 100) / val).toFixed(2)}%`\n            toolipValue = ctx.singleDataset\n              ? `${toolipValue} (${percentage})`\n              : `${legend}: ${toolipValue} (${percentage})`\n            ctx.setHoverValue({ label, value: toolipValue, legend, ctx })\n          } else {\n            toolipValue = `${toolipValue}`\n            ctx.setHoverValue({ label, value: toolipValue, legend, ctx })\n          }\n\n          return toolipValue\n        },\n      },\n    }\n  }\n\n  setDataLabels() {\n    const ctx = this\n    return {\n      textAlign: 'center',\n      color: '#FFF',\n      display: (context) => {\n        const { dataset, dataIndex } = context\n        const value = dataset.data[dataIndex]\n        const total = dataset.data.reduce((a, c) => a + c, 0)\n        const percentage = (value / total) * 100\n        return percentage > 4\n      },\n      formatter: (value, context) => {\n        const { dataset } = context\n        const label = ctx.singleDataset\n          ? `${value}${this.suffix}`\n          : `${value}${this.suffix}\n${dataset.label}`\n\n        return label\n      },\n      labels: {\n        title: {\n          font: {\n            weight: 'bold',\n            size: 16,\n            color: '#FFF',\n          },\n        },\n      },\n    }\n  }\n}\n", "/* eslint-disable class-methods-use-this */\nimport ChartVisualisation from '../clientClass.mjs'\n\nexport default class LineChartVisualisation extends ChartVisualisation {\n  static getModuleName() {\n    return 'line-chart'\n  }\n\n  initialise() {\n    this.setupCanvas()\n    this.settings = this.initSettings()\n    this.chartData = this.generateChartData(this.settings)\n    this.lastIndex = this.chartData.data.labels.length - 1\n    this.initChart(this.chartData)\n  }\n\n  initSettings() {\n    return {\n      options: this.setOptions(),\n      toolTipOptions: this.setToolTipOptions(),\n      styling: this.setDatasetStyling(),\n    }\n  }\n\n  setPartialStyle(ctx) {\n    let style\n    if ((this.partialEnd && ctx.p1DataIndex === this.lastIndex) || (this.partialStart && ctx.p1DataIndex === 1)) {\n      style = [6, 6]\n    }\n    return style\n  }\n\n  setDatasetStyling() {\n    const pallette = this.getColourPallette()\n    return pallette.map((colour) => {\n      return {\n        borderColor: colour.hex,\n        backgroundColor: colour.hex,\n        pointStyle: 'circle',\n        pointRadius: 4,\n        pointHoverRadius: 10,\n        pointHitRadius: 20,\n        datalabels: {\n          display: false,\n        },\n        segment: {\n          borderDash: (ctx) => this.setPartialStyle(ctx),\n        },\n      }\n    })\n  }\n\n  setToolTipOptions() {\n    const ctx = this\n    return {\n      callbacks: {\n        title(context) {\n          const { label, dataset } = context[0]\n          const { label: establishmentId } = dataset\n          const title = ctx.singleDataset ? `${label}` : `${establishmentId}: ${label}`\n          return title\n        },\n        label(context) {\n          const { label } = context\n          const { data, label: legend } = context.dataset\n          const value = data[context.dataIndex]\n          ctx.setHoverValue({ label, value, legend, ctx })\n          return value\n        },\n      },\n    }\n  }\n\n  setOptions() {\n    return {\n      scales: {\n        y: {\n          min: 0,\n          ticks: {\n            fontSize: 12,\n          },\n        },\n        x: {\n          ticks: {\n            fontSize: 12,\n          },\n        },\n      },\n    }\n  }\n}\n", "import { DprClientClass } from '../../../DprClientClass.mjs'\n\nexport default class Pagination extends DprClientClass {\n  static getModuleName() {\n    return 'scorecard'\n  }\n\n  initialise() {\n    this.scorecard = this.getElement()\n    this.value = this.scorecard.querySelector('.dpr-scorecard__value')\n    this.ragStatus = this.scorecard.querySelector('.dpr-scorecard__value-description')\n    this.initHover()\n  }\n\n  initHover() {\n    this.value.addEventListener('mouseover', async () => {\n      this.ragStatus.classList.add('dpr-scorecard__value-description--active')\n    })\n    this.value.addEventListener('mouseout', async () => {\n      this.ragStatus.classList.remove('dpr-scorecard__value-description--active')\n    })\n  }\n}\n", "/* eslint-disable no-new */\n/* global dayjs */\n\n// Helper\nimport DprLoadingHelper from './DprLoadingHelper.mjs'\n\n// General Components\nimport CardGroup from './components/card-group/clientClass.mjs'\nimport Search from './components/_catalogue/catalogue-search/clientClass.mjs'\nimport BookmarkToggle from './components/bookmark-toggle/clientClass.mjs'\nimport ShowMore from './components/show-more/clientClass.mjs'\nimport DownloadFeedbackForm from './components/download-feeback-form/cientClass.mjs'\n\n// Reports\nimport Pagination from './components/_reports/report-pagination/clientClass.mjs'\nimport ReportActions from './components/_reports/report-actions/clientClass.mjs'\nimport DataTable from './components/_reports/report-data-table/clientClass.mjs'\nimport Columns from './components/_reports/report-columns-form/clientClass.mjs'\nimport DownloadMessage from './components/_reports/report-download-message/clientClass.mjs'\n\n// Filters\nimport InteractiveFilters from './components/_filters/filters-interactive/clientClass.mjs'\n\n// Async\nimport AsyncPolling from './components/_async/async-polling/clientClass.mjs'\nimport AsyncFilters from './components/_async/async-filters-form/clientClass.mjs'\n\n// Sync\nimport SyncLoading from './DprSyncLoading.mjs'\n\n// Inputs\nimport DateInput from './components/_inputs/date-input/clientClass.mjs'\nimport DateRange from './components/_inputs/date-range/clientClass.mjs'\nimport Autocomplete from './components/_inputs/autocomplete-text-input/clientClass.mjs'\nimport GranularDateRange from './components/_inputs/granular-date-range/clientClass.mjs'\n\n// User repoorts\nimport RequestedReportsList from './components/user-reports/requested/clientClass.mjs'\nimport RecentlyViewedList from './components/user-reports/viewed/clientClass.mjs'\n\n// Charts\nimport BarChartVisualisation from './components/_charts/chart/bar/clientClass.mjs'\nimport DoughnutChartVisualisation from './components/_charts/chart/doughnut/clientClass.mjs'\nimport LineChartVisualisation from './components/_charts/chart/line/clientClass.mjs'\n\n// Dashboards\nimport ScoreCard from './components/_dashboards/scorecard/clientClass.mjs'\n\n/**\n * Initialise all components\n *\n * Use the `data-dpr-module` attributes to find, instantiate and initialise all the\n * components provided as part of DPR Frontend.\n *\n */\nfunction initAll() {\n  const loadingHelper = new DprLoadingHelper()\n\n  const components = [\n    Autocomplete,\n    CardGroup,\n    Columns,\n    AsyncFilters,\n    InteractiveFilters,\n    Pagination,\n    DataTable,\n    AsyncPolling,\n    Search,\n    BookmarkToggle,\n    DateInput,\n    RequestedReportsList,\n    RecentlyViewedList,\n    DateRange,\n    ShowMore,\n    BarChartVisualisation,\n    DoughnutChartVisualisation,\n    LineChartVisualisation,\n    DownloadFeedbackForm,\n    ScoreCard,\n    ReportActions,\n    DownloadMessage,\n    SyncLoading,\n    GranularDateRange,\n  ]\n\n  const customParseFormat = window.dayjs_plugin_customParseFormat\n  dayjs.extend(customParseFormat)\n\n  components.forEach((Component) => {\n    const $elements = document.querySelectorAll(`[data-dpr-module=\"${Component.getModuleName()}\"]`)\n    $elements.forEach(async ($element) => {\n      try {\n        new Component($element, loadingHelper).initialise()\n      } catch (error) {\n        console.log(error)\n      }\n    })\n  })\n}\n\nexport { initAll }\n"],
  "mappings": "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",
  "names": ["AsyncFilters", "Pagination", "AsyncFilters", "Pagination"]
}
